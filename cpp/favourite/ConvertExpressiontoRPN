class Solution {
public:
    /**
     * @param expression: A string array
     * @return: The Reverse Polish notation of this expression
     */
    vector<string> convertToRPN(vector<string> &expression) {
        // write your code here
        vector<string>res;
        stack<string>st;
        int n = expression.size();
        for(auto tmp : expression) {
           if(tmp == ")") {
               while(st.top() !="(") {
                   res.push_back(st.top());
                   st.pop();
               }
               st.pop();
           }else if(isOperator(tmp)) {
               while(!st.empty() && getLevel(st.top()) >= getLevel(tmp)) {
                   res.push_back(st.top());
                   st.pop();
               }
               st.push(tmp);
           } else {
               st.push(tmp);
           }
            
        }
        
        while(!st.empty()) {
            res.push_back(st.top());
            st.pop();
        }
        return res;
      
    }
    
    bool isOperator(string s){
        return s == "+" || s=="-" || s=="*" ||s=="/";
    }
    
    int getLevel(string s) {
        if (s == "(") return 1;
        else if (s == "+" || s == "-") return 2;
        else if(s == "*" || s=="/") return 3;
        else return 4;
    }
    
    
    
    
};